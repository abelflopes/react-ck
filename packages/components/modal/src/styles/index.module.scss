@use "@react-ck/card";
@use "variables";
@import "@react-ck/theme";
@import "@react-ck/elevation";

@keyframes appear {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

$padding: get-css-var(modal, spacing);

.root {
  @include define-css-var(modal, spacing, get-spacing(3));

  position: fixed;
  z-index: map-get-strict($elevation, overlay);
  top: 0;
  left: 0;
  display: flex;
  overflow: hidden;
  width: 100%;
  height: 100%;
  box-sizing: border-box;
  align-items: center;
  justify-content: center;
  padding: calc(#{$padding} * 2);
  animation: appear 0.3s ease-in forwards;
}

// Add to document body to prevent back scrolling
.lock_scroll {
  overflow: hidden;
}

// Extend overlay component styles
.clickable_overlay {
  cursor: pointer;
}

.card {
  @include card.base;
  @include card.skin-shadowed;

  position: relative; // Bring to front (z-index)
  display: flex;
  width: 100%;
  max-height: 100%;
  flex-direction: column;
}

@each $key, $value in variables.$modal-sizes {
  .size_#{$key} {
    max-width: $value;
  }
}

.size_full {
  max-width: 100%;
}

.content {
  padding: calc(#{$padding} * 0.5) $padding;
}

.header,
.footer {
  padding-right: $padding;
  padding-left: $padding;
}

.header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding-top: $padding;
  padding-bottom: calc(#{$padding} * 0.5);
  gap: get-css-var(modal, spacing);
}

.footer {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  padding-top: calc(#{$padding} * 0.5);
  padding-bottom: $padding;
  gap: get-css-var(modal, spacing);
}
