@use "@react-ck/theme";
@use "@react-ck/scss-utils";
@use "../../text/styles/shared" as text;
@use "variables";
@use "sass:map";

.root {
  display: flex;
  flex-direction: column;
  gap: scss-utils.get-css-var(tabs, spacing);
}

.track {
  display: flex;
  flex-wrap: wrap;
}

.tab_button {
  border: none;
  background: transparent;
  cursor: pointer;

  @include theme.focus;

  .skin_default & {
    @include scss-utils.define-css-var(tabs, border-color, theme.get-color(neutral-light-400));
    @include text.text-base;

    padding: theme.get-spacing(1) theme.get-spacing(2);
    border-bottom: solid #{scss-utils.get-css-var(spacing, border)}
      #{scss-utils.get-css-var(tabs, border-color)};

    &_active {
      @include scss-utils.define-css-var(tabs, border-color, theme.get-color(highlight-primary));
    }
  }

  .skin_chip & {
    padding: theme.get-spacing(0.5) theme.get-spacing(1);
    border-radius: theme.get-spacing(2);
    color: theme.get-color(neutral-dark-100);

    &_active {
      background-color: theme.get-color(highlight-primary-light);
      color: theme.get-color(highlight-primary);
    }
  }
}

.content_wrapper {
  position: relative;
}

.content {
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.1s;
  will-change: opacity;

  &.content_active {
    position: relative;
    opacity: 1;
    pointer-events: all;
  }
}

@each $key in map.keys(variables.$tabs-spacings) {
  .spacing_#{$key} {
    @include scss-utils.define-css-var(
      tabs,
      spacing,
      scss-utils.map-get-strict(variables.$tabs-spacings, $key)
    );
  }
}
