@use "@react-ck/theme";
@use "../../text/styles/shared" as text;
@use "@react-ck/scss-utils";
@use "variables";

@mixin shadow-small {
  // TODO: theme shadows
  box-shadow: 0 1px 3px 0 #00000029;
}

@mixin shadow-big {
  // TODO: theme shadows
  box-shadow: 0 1px 6px 0 #00000035;
}

@mixin shadow_transition {
  transition: box-shadow 0.3s ease;
}

// Skins

@mixin skin-bordered {
  border: solid scss-utils.get-css-var(spacing, border) theme.get-color(neutral-light-300);
}

@mixin skin-shadowed {
  @include shadow-small;
}

@mixin skin-ghost {
  @include scss-utils.define-css-var(card, border-radius, 0);
}

@mixin skin-light {
  background-color: theme.get-color(neutral-light-200);
}

// Spacing

@mixin card-spacing($key) {
  @include scss-utils.define-css-var(
    card,
    spacing,
    scss-utils.map-get-strict(variables.$card-spacings, $key)
  );
}

// Border Radius

@mixin card-border-radius($key) {
  @include scss-utils.define-css-var(
    card,
    border-radius,
    scss-utils.map-get-strict(variables.$card-border-radius, $key)
  );
}

// Card

@mixin base {
  @include text.text-base;
  @include shadow_transition;
  @include card-border-radius(m);

  display: block; // force display in case of polimorphy
  box-sizing: border-box;
  border-radius: scss-utils.get-css-var(card, border-radius);
  background-color: theme.get-color(neutral-light-100);
}

@mixin content {
  padding: scss-utils.get-css-var(card, spacing);
}
