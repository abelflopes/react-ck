@use "@react-ck/theme";
@use "../../text/styles/shared" as text;
@use "@react-ck/scss-utils";

$spacing-y: theme.get-spacing(0.5);

.root {
  margin-right: scss-utils.get-css-var(chat-message, margin-right);
  margin-left: scss-utils.get-css-var(chat-message, margin-left);

  &:not(:first-child) {
    margin-top: $spacing-y;
  }

  &.received {
    @include scss-utils.define-css-var(
      chat-message,
      background-color,
      theme.get-color(neutral-light-2)
    );
    @include scss-utils.define-css-var(chat-message, color, theme.get-color(neutral-dark-4));
    @include scss-utils.define-css-var(chat-message, margin-right, auto);
  }

  &.sent {
    @include scss-utils.define-css-var(
      chat-message,
      background-color,
      theme.get-color(highlight-primary)
    );
    @include scss-utils.define-css-var(chat-message, color, theme.get-color(neutral-light-1));
    @include scss-utils.define-css-var(chat-message, margin-left, auto);

    .sender {
      text-align: right;
    }
  }

  &.sent + &.sent {
    margin-top: theme.get-spacing(0.1);

    .sender {
      display: none;
    }
  }

  &.received + &.received {
    margin-top: theme.get-spacing(0.1);

    .sender {
      display: none;
    }
  }
}

.text {
  @include text.text-base;
  @include text.text-variation(extra-small);

  padding: theme.get-spacing(1) theme.get-spacing(1.5);
  border-radius: theme.get-spacing(2);
  background-color: scss-utils.get-css-var(chat-message, background-color);
  color: scss-utils.get-css-var(chat-message, color);
  word-break: break-word;
}

.sender {
  @include text.text-base;
  @include text.text-variation(extra-small);

  padding: 0 theme.get-spacing(-5);
  color: theme.get-color(neutral-dark-1);
}
